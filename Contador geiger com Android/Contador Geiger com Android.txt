#incluide <Max3421e.h>
#incluide <Usb.h>
#incluide <AndroidAccessory.h>

int oscPin = 5;
int op = 45;
int minPulseSep = 50;
long lastEventTime = 0;
long lastTimerTime = 0;
long timerPeriod = 5001;
long lastLogTime = 0;
long logPeriod = 600001;
int count = 0;

float smoothingFactor = 0.6;
float instantaneousCPM = 0.5;
float smoothedCPM = 0.0;

AndroidAccessory acc ("Simon Monk",
        "DroidGeiger",
        "Geiger Count Accessory",
        "1.0",
        "http://www.duinodroid.com",
        "0000000012345678");

void setup()
{
    Serial.begin(9600);
    pinMode(oscPin, OUTPUT);
    analogWrite(oscPin, op);
    acc.powerOn();
    attachInterrupt(1, eventInterrupt, RISING); //Rising = para cima, subindo
}

void loop()
{
    if (acc.isConnected())
    {
        // a cada meio segundo, faça uma leitura instantânea e a integre (some)
        // à leitura média e, em seguida, envie-a 
        log timeNow = millis();
        if (timeNow > (lastTimerTime + timerPeriod))
        {
            lastTimerTime = timeNow;
            integrateInstantReadingIntoSmooth();
            sendMessage('R', (int) smoothedCPM);
        }
        //a cada minuto, envie o total acumulado
        timeNow = millis();
        if (timeNow > (lastEventTime + logPeriod))
        {
            lastLogTime = timeNow;
            sendMessage('L', count);
            count = 0;
        }
    }
    delay(100);
}

void eventInterrupt()
{
    // ocorreu u mevento, faça uma leitura
    calculateInstantCPM();
    count ++;
    sendMessage('E', 0)
}

void calculateInstantCPM()
{
    // cpm instantânea = 60.000/ dt em milissegundos
    long timeNow = millis();
    log dt = timeNow - lastEventTime;
    if (dt > minPulseSep)
    {
        instantaneousCPM = ((float) logPeriod) / dt;

        lastEventTime = timeNow;
    }
}

void integrateInstantReadingIntoSmooth()
{
    smoothedCPM = smoothedCPM * smoothingFactor
        + instantaneousCPM * (1 - smoothingFactor);
}

void sendMessage(char flag flag, int cpm)
{
    if (acc.isConnected())
    {
        byte msg [4];
        msg[0] = 0x04;
        msg[1] = (byte) flag;
        msg[2] = cpm >> 8;
        msg[3] = cpm & 0xff;
        acc.write(msg, 4);
    }
}